
(use-modules (convenience-lambda)
             ((rnrs) #:select (vector-map vector-for-each mod))
             (system repl server)
             (zeroconf)
             (osc)
             (emacsy emacsy)
             (statprof))

(let ((orig emacsy-mode-line))
  (set! emacsy-mode-line 
        (lambda ()
          (format #f "~a FPS ~1,2f" (orig) (get-parameter 'FPS)))))

; (use-modules (system vm trace))
; (trace-calls-to-procedure make-stack)
(set! %load-hook (lambda (filename)
                   (format #t "Loading ~a ...\n" filename)))
(define profile? #f)
(define spawn-threads? #t)

(define (stop-profiling)
    (statprof-stop)
    (statprof-display))

(when profile?
  (statprof-reset 0 50000 #t)
  (statprof-start)
  (add-hook! emacsy-terminate-hook stop-profiling))

;; Let's start a REPL.
(when spawn-threads?
  (spawn-server)


;; Let's start the OSC server and publish it.
  (start-osc-server)
  (spawn-publish-service "" "_osc._udp." "ERACS" 7770)
  ;; CTRL-c should still work but it doesn't after some threads are spawned.
  ;; This next line fixes that.
  (restore-signals))

(set-parameter! 'camera-position #(4 4 3))
(load "quadruped2.scm")
(load "record-robot.scm")
(load "hill-climber.scm")

;(optimize 1)
(restore-signals)
